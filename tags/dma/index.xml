<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DMA on Garson's Blog</title><link>https://garnote.top/tags/dma/</link><description>Recent content in DMA on Garson's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>Garson</copyright><lastBuildDate>Sun, 06 Feb 2022 12:46:00 +0800</lastBuildDate><atom:link href="https://garnote.top/tags/dma/index.xml" rel="self" type="application/rss+xml"/><item><title>STM32通过DMA接收不定长串口数据</title><link>https://garnote.top/post/stm32_hal_dma_uart/</link><pubDate>Sun, 06 Feb 2022 12:46:00 +0800</pubDate><guid>https://garnote.top/post/stm32_hal_dma_uart/</guid><description>半年多前做课设，用到HAL库，体验上，用STM32CubeMX和HAL库开发真的很快，但是代码效率确实低不少。 在课设中GPS模块用的串口传输。为了处理接收方便，使用串口的Idle中断来实现串口的不定长接收，再配合DMA就可以减轻CPU负担，把算力分配到更重要的任务上。文中讨论内容适用于Normal模式的DMA。
Idle中断就是空闲中断，当总线上在一个字节对应的周期内未再有新的数据接收时，就会触发中断。
使用HAL的串口DMA 在STM32CubeMX里面的配置就不说了。 主要用到下面两个函数：
1HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size) 2 3__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) HAL_UARTEx_RxEventCallback()是串口事件回调函数之一。
Reception is initiated by this function call. Further progress of reception is achieved thanks to DMA services, transferring automatically received data elements in user reception buffer and calling registered callbacks at half/end of reception. UART IDLE events are also used to consider reception phase as ended. In all cases, callback execution will indicate number of received data elements.</description></item></channel></rss>