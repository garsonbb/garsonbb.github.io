<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>控制 on Garson's Blog</title><link>https://garnote.top/tags/%E6%8E%A7%E5%88%B6/</link><description>Recent content in 控制 on Garson's Blog</description><generator>Hugo</generator><language>zh-hans</language><copyright>Garson</copyright><lastBuildDate>Wed, 26 May 2021 00:17:00 +0000</lastBuildDate><atom:link href="https://garnote.top/tags/%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>四元数姿态解算-MahonyAHRS</title><link>https://garnote.top/post/mahonyahrs/</link><pubDate>Wed, 26 May 2021 00:17:00 +0000</pubDate><guid>https://garnote.top/post/mahonyahrs/</guid><description>加速度计和角速度计解算姿态 在只使用加速度计和陀螺仪融合数据时，流程是这样的：
归一化传感器输入的B系加速度 $ {\begin{bmatrix}b\_a_x &amp;amp; b\_a_y &amp;amp; b\_a_z\end{bmatrix}}^\top $ 。 把N系重力加速度旋转到B系 $ {\begin{bmatrix}n2b\_a_x &amp;amp; n2b\_a_y &amp;amp; n2b\_a_z\end{bmatrix}}^\top $ 。 N系重力加速度就是g， $ {\begin{bmatrix} 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}}^\top $。 把上面两个同在B系的加速度进行叉积运算，得到误差 $ {\begin{bmatrix}e\_a_x &amp;amp; e\_a_y &amp;amp; e\_a_z\end{bmatrix}}^\top $ 。（得到误差反映的就是目前解算得到的姿态矩阵与真实姿态之间的误差）。 把上面获得的误差通过PI控制器补偿到传感器输入的角速度。 $ {\begin{bmatrix}b\_g_x &amp;amp; b\_g_y &amp;amp; b\_g_z\end{bmatrix}}^\top $ 。 使用上面已经补偿的角速度和一阶龙塔公式更新四元数。 归一化四元数。 在这个过程中，就是利用重力加速度恒等于1g并垂直向下，来修正由角速度积分得到的姿态矩阵。
接下来确定旋转矩阵的方向：
由 $ q_0=\cos{\frac{\theta}{2}} \quad ,q_1= - \sin{\frac{\theta}{2}}\hat{x} \quad , q_2= - \sin{\frac{\theta}{2}}\hat{y} \quad ,q_3= - \sin{\frac{\theta}{2}}\hat{z} $ 可算得下面的两个四元数旋转矩阵。具体计算过程可以看
Krasjet对于四元数与三维旋转的简单讨论</description></item><item><title>使用Maltab设计二阶互补滤波器</title><link>https://garnote.top/post/butter_matlab/</link><pubDate>Mon, 05 Apr 2021 21:10:00 +0000</pubDate><guid>https://garnote.top/post/butter_matlab/</guid><description>1clear,clc % HPF 2 3N = 2; % 二阶 4fs=1000; % 采样率Hz 5fc=50; % 3dB截止频率 6OmegaC=(fc*2*pi/1000) /pi; % 截止频率归一化 7 8[ b, a ] = butter(N,OmegaC,&amp;#39;HIGH&amp;#39;); 9 10freqz(b,a); 1clear,clc % LPF 2 3N = 2; % 二阶 4fs=1000; % 采样率Hz 5fc=50; % 3dB截止频率 6OmegaC=(fc*2*pi/1000) /pi; % 截止频率归一化 7 8[ b, a ] = butter(N,OmegaC,&amp;#39;LOW&amp;#39;); 9 10freqz(b,a); butter函数说明https://ww2.mathworks.cn/help/signal/ref/butter.html，默认是生成数字滤波器的传递函数系数，用双线性变换从模拟滤波器转为数字滤波器。
得到传递函数的系数b,a。进行反z变换到离散域，就可以得到差分方程。
$$ \frac{Y(z)_{zs}}{X(z)}=H(z)=\frac{B(z)}{A(z)} $$
$$ B(z)=\sum_{j=0}^m{b_{m-j}z^{-j}}=b_m+b_{m-1}z^{-1}+&amp;hellip;+b_0z^{-m} \\\ A(z)=\sum_{i=0}^n{a_{n-i}z^{-i}}=a_n+a_{n-1}z^{-1}+&amp;hellip;+a_0z^{-n} $$
在Matlab得到的[ b, a ]中，$b = [b_{m},b_{m-1}, \ &amp;hellip;\ ,b_{0}]，a = [a_{n},a_{n-1}, \ &amp;hellip;\ ,a_{0}]$</description></item><item><title>模糊PID用到的模糊逻辑表</title><link>https://garnote.top/post/fuzzypid/</link><pubDate>Mon, 30 Mar 2020 17:13:00 +0000</pubDate><guid>https://garnote.top/post/fuzzypid/</guid><description/></item><item><title>如何得到模糊控制离线控制表？手算和Matlab</title><link>https://garnote.top/post/fuzzyctrl/</link><pubDate>Sun, 29 Mar 2020 17:54:00 +0000</pubDate><guid>https://garnote.top/post/fuzzyctrl/</guid><description>手算 这里用的模糊逻辑表是模糊PID中P的表。
先摆上我的隶属度表 状态变量量化等级 -4 -3 -2 -1 0 1 2 3 4 NB 0 0 0 0 0 0 0 0.5 1 NM 0 0 0 0 0 0.2 1 0.2 0 NS 0 0 0 0 0.1 1 0.4 0 0 ZO 0 0 0 0.2 1 0.2 0 0 0 PS 0 0 0.4 1 0.1 0 0 0 0 PM 0 0.2 1 0.2 0 0 0 0 0 PB 1 0.</description></item></channel></rss>